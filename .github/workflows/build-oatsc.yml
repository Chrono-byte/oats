---
name: Build and Publish Oats Compiler

on:
  push:
    branches:
      - master
    paths:
      - crates/oatsc/**
      - .github/workflows/build-oatsc.yml
  pull_request:
    branches:
      - master
    paths:
      - crates/oatsc/**
      - .github/workflows/build-oatsc.yml

env:
  CARGO_TERM_COLOR: "always"

jobs:
  build-oatsc-linux:
    name: Build Oats Compiler (Linux)
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            artifact: oatsc-linux-x86_64
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install sccache
        run: |
          cargo install sccache
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_DIR=~/.cache/sccache" >> $GITHUB_ENV

      - name: Cache sccache
        uses: actions/cache@v4
        with:
          path: ~/.cache/sccache
          key: sccache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            sccache-${{ runner.os }}-

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install LLVM (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm-18-dev clang-18 libclang-18-dev
          echo "LLVM_SYS_181_PREFIX=/usr/lib/llvm-18" >> $GITHUB_ENV
          echo "/usr/lib/llvm-18/bin" >> $GITHUB_PATH

      - name: Build oatsc
        run: cargo build --release --bin oatsc --target ${{ matrix.target }}

      - name: Rename artifact
        run: cp target/${{ matrix.target }}/release/oatsc ${{ matrix.artifact }}

      - name: Make executable (Unix)
        run: chmod +x ${{ matrix.artifact }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}
          retention-days: 90

  # build-oatsc-windows:
  #   name: Build Oats Compiler (Windows)
  #   runs-on: windows-2022
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #
  #     - name: Install Rust toolchain
  #       uses: actions-rust-lang/setup-rust-toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: x86_64-pc-windows-msvc
  #
  #     - name: Cache Cargo dependencies
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           ~/.cargo/registry
  #           ~/.cargo/git
  #         key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-cargo-
  #
  #     - name: Install LLVM (Windows)
  #       shell: powershell
  #       run: |
  #         choco install llvm --version 18.1.8 --allow-downgrade
  #         Add-Content -Path $env:GITHUB_ENV -Value 'LLVM_SYS_181_PREFIX=C:\Program Files\LLVM'
  #         Add-Content -Path $env:GITHUB_PATH -Value 'C:\Program Files\LLVM\bin'
  #
  #     - name: Build oatsc
  #       run: cargo build --release --bin oatsc --target x86_64-pc-windows-msvc
  #
  #     - name: Rename artifact
  #       shell: powershell
  #       run: |
  #         $src = "target/x86_64-pc-windows-msvc/release/oatsc.exe"
  #         Copy-Item -Path $src -Destination "oatsc-windows-x86_64.exe" -Force
  #
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: oatsc-windows-x86_64.exe
  #         path: oatsc-windows-x86_64.exe
  #         retention-days: 90

  create-release:
    name: Create Compiler Release
    needs:
      - build-oatsc-linux
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate version tag
        id: version
        run: |
          echo "tag=oatsc-nightly" >> $GITHUB_OUTPUT
          echo "title=Oatsc Nightly Build $(date +%Y-%m-%d)" >> $GITHUB_OUTPUT
          echo "notes=Automated nightly oatsc compiler build from commit ${{ github.sha }}" >> $GITHUB_OUTPUT
          echo "date=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Create Release and upload assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete oatsc-nightly --yes || true
          gh release create "${{ steps.version.outputs.tag }}" \
            --title "${{ steps.version.outputs.title }}" \
            --notes "${{ steps.version.outputs.notes }}" \
            --prerelease \
            $(find artifacts -type f)
