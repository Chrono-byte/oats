name: Build and Publish Oats Compiler

on:
  push:
    branches:
      - master
    paths:
      - "crates/oatsc/**"
      - ".github/workflows/build-oatsc.yml"
  pull_request:
    branches:
      - master
    paths:
      - "crates/oatsc/**"
      - ".github/workflows/build-oatsc.yml"

env:
  CARGO_TERM_COLOR: always

jobs:
  build-oatsc:
    name: Build Oats Compiler
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            artifact: oatsc-linux-x86_64
          - os: ubuntu-24.04
            target: aarch64-unknown-linux-gnu
            artifact: oatsc-linux-aarch64
          - os: macos-14
            target: aarch64-apple-darwin
            artifact: oatsc-macos-aarch64
          - os: macos-13
            target: x86_64-apple-darwin
            artifact: oatsc-macos-x86_64
          - os: windows-2022
            target: x86_64-pc-windows-msvc
            artifact: oatsc-windows-x86_64.exe
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install LLVM (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install llvm@18
          if [ "$(uname -m)" = "arm64" ]; then
            LLVM_PREFIX="/opt/homebrew/opt/llvm@18"
          else
            LLVM_PREFIX="/usr/local/opt/llvm@18"
          fi
          echo "LLVM_SYS_181_PREFIX=$LLVM_PREFIX" >> $GITHUB_ENV
          echo "$LLVM_PREFIX/bin" >> $GITHUB_PATH

      - name: Install LLVM (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm-18-dev clang-18 libclang-18-dev
          echo "LLVM_SYS_181_PREFIX=/usr/lib/llvm-18" >> $GITHUB_ENV
          echo "/usr/lib/llvm-18/bin" >> $GITHUB_PATH

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu

      - name: Create Cargo config for aarch64 linker
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          mkdir -p .cargo
          cat > .cargo/config.toml <<'EOF'
          [target.aarch64-unknown-linux-gnu]
          linker = "aarch64-linux-gnu-gcc"
          EOF

      - name: Build oatsc
        run: |
          cargo build --release --bin oatsc --target ${{ matrix.target }}

      - name: Rename artifact
        run: |
          cp target/${{ matrix.target }}/release/oatsc${{ contains(matrix.target, 'windows') && '.exe' || '' }} ${{ matrix.artifact }}

      - name: Make executable (Unix)
        if: runner.os != 'Windows'
        run: chmod +x ${{ matrix.artifact }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}
          retention-days: 90

  create-release:
    name: Create Compiler Release
    needs: build-oatsc
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate version tag
        id: version
        run: |
          # Use commit short SHA as version identifier for compiler builds
          echo "tag=compiler-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "date=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_OUTPUT

      - name: Create Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Create a release tag for the compiler
          gh release create "${{ steps.version.outputs.tag }}" \
            --title "Compiler Build ${{ steps.version.outputs.date }}" \
            --notes "Automated oatsc compiler build from commit $(git rev-parse --short HEAD)" \
            artifacts/**/*