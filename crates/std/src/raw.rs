//! Raw extern "C" functions for compatibility with the compiler codegen
//!
//! These functions are called directly by the LLVM code generated by oatsc.
//! They provide low-level I/O operations.

use libc::c_char;

// These symbols are now provided by the `oats_primitives` crate. We keep
// extern declarations here so other parts of `crates/std` that reference
// the symbols continue to link while we migrate code to the new layer.

extern "C" {
    /// # Safety
    /// Pointer must be a valid nul-terminated C string or null.
    #[link_name = "print_str"]
    pub fn print_str(s: *const c_char);

    #[link_name = "print_f64"]
    pub fn print_f64(v: f64);

    #[link_name = "print_i32"]
    pub fn print_i32(v: i32);

    /// # Safety
    /// Pointer must be a valid nul-terminated C string or null.
    #[link_name = "print_str_no_nl"]
    pub fn print_str_no_nl(s: *const c_char);

    #[link_name = "print_f64_no_nl"]
    pub fn print_f64_no_nl(v: f64);

    #[link_name = "print_newline"]
    pub fn print_newline();

    #[link_name = "sleep_ms"]
    pub fn sleep_ms(ms: f64);

    #[link_name = "number_to_string"]
    pub fn number_to_string(num: f64) -> *mut c_char;
}
