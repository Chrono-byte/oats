// Test basic union types and typeof operator

function testValueUnions(): void {
    // Test number | boolean union
    let x: number | boolean = 42;
    console.log(x);  // Should print 42
    
    // Reassign to boolean
    x = true;
    // Can't directly print boolean, so we'll use a workaround
    if (x) {
        console.log(1);  // Should print 1 if true
    }
}

function testPointerUnions(): void {
    // Test string | null (Option type)
    let name: string | null = "Alice";
    if (name !== null) {
        console.log(name);
    }
    
    name = null;
    if (name === null) {
        console.log("null");
    }
}

function testTypeofGuards(): void {
    // Test typeof with unions
    let value: number | string = 42;
    
    if (typeof value === "number") {
        console.log(value);  // Should print 42
    }
    
    value = "hello";
    if (typeof value === "string") {
        console.log(value);  // Should print "hello"
    }
}

function testMixedUnions(): void {
    // Test union with both value and pointer types
    let mixed: number | string = 100;
    
    if (typeof mixed === "number") {
        console.log(mixed);  // Should print 100
    }
    
    mixed = "world";
    if (typeof mixed === "string") {
        console.log(mixed);  // Should print "world"
    }
}

export function main(): void {
    console.log("=== Union Type Tests ===");
    
    console.log("1. Value unions:");
    testValueUnions();
    
    console.log("2. Pointer unions:");
    testPointerUnions();
    
    console.log("3. Typeof guards:");
    testTypeofGuards();
    
    console.log("4. Mixed unions:");
    testMixedUnions();
    
    console.log("=== All tests complete ===");
}
